[tool.poetry]
name = "POGPN"
version = "0.2.0"
description = "POGPN with Gitlab MLflow integration for BO experimentation."
license = "BSD-3-Clause"
authors = ["Anonymous"]
maintainers = ["Anonymous"]
readme = "README.md"
# The project homepage, e.g. Gitlab pages
# homepage = ""
# The project documentation, e.g. Gitlab pages
# documentation = ""
keywords = ["tool", "ml"]
classifiers = [
    # Specify the Python versions you support here. In particular, ensure
    # that you indicate you support Python 3. These classifiers are *not*
    # checked by 'pip install'. See instead 'python_requires' below.
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    "Programming Language :: Python :: 3.10",
    'Programming Language :: Python :: 3 :: Only',
]
packages = [
    { include = "src", from = "." },
]

[build-system]
requires = ["poetry-core", "cython", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
setuptools = "*"
python = ">=3.10,<4.0"
matplotlib = { version = "3.7.0", extras = ["qt5"]}
pyyaml = "*"
botorch = "=0.14.0"
meshio = "*"
networkx = "*"
pandas = "2.2"
numpy = ">=1.23.2,<2"
tikzplotlib= "0.10.1"
liac-arff = "2.5.0"
gcastle= "*"
pytest = "*"
mlflow = "2.7.1"
dvc = "*"
torcheval= "0.0.7"
tqdm = "^4.66.0"
scikit-learn = "*"
webcolors = "*"
torch = {version = "*", source = "pytorch"}
graphviz = "^0.20.3"
pydot = "^4.0.0"
jupyter = "^1.1.1"
plotly = "^6.1.2"
torchviz = "^0.0.3"
torchinfo = "^1.8.0"
dash = "^3.1.1"
pynml = "^1.1.1"
pynvml = "^12.0.0"
diffrax = "^0.7.0"

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu121"
priority = "supplemental"


[tool.poetry.group.pytest]
optional = true
[tool.poetry.group.pytest.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"
pytest-profiling = "*"
check-manifest = "*"
coverage = "*"
typing_extensions = "*"
ruff = "*"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

show-fixes = true
# Select rules for various checks

extend-select = [
    "B",
    "W",
    "A",  # Code quality checks
    "C",  # Cyclomatic complexity (McCabe complexity)
    "D",  # Pydocstyle (docstring checks)
    "N",  # Naming conventions (PEP8-naming)
    "RUF",  # Ruff specific checks for readability and optimizations
    "TYP",  # Type annotations,
    "C90",
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D200",  # One-line docstring should fit on one line
    "D205",  # One blank line required between summary and description
    "D400",  # First line should end with a period
    "D403",  # First word of the docstring should be capitalized
    "D417"   # Missing argument descriptions in docstring
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Maximum allowed complexity for functions (McCabe complexity)
[lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 5

[format]
skip-magic-trailing-comma = false

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
